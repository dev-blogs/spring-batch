<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/batch
http://www.springframework.org/schema/batch/spring-batch-2.1.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-2.5.xsd">

	<job id="importProducts" xmlns="http://www.springframework.org/schema/batch">
		<listeners>
			<listener ref="jobListener" />
			<listener ref="monitoringJobListener" />
		</listeners>
		<step id="decompress" next="readWriteProducts">
			<tasklet ref="decompressTasklet"/>
		</step>
		<step id="readWriteProducts">
			<tasklet>
				<chunk reader="reader" writer="writer" commit-interval="100" skip-limit="2">
					<skippable-exception-classes>
						<include class="org.springframework.batch.item.file.FlatFileParseException"/>
					</skippable-exception-classes>
				</chunk>
			</tasklet>
		</step>
	</job>
	
	<context:annotation-config />
	<context:component-scan base-package="com.example" />

	<bean id="jobListener" class="com.example.batch.listener.JobListener">
		<property name="simpleJdbcTemplate" ref="simpleJdbcTemplate" />
	</bean>
	
	<bean id="decompressTasklet" class="com.example.batch.DecompressTasklet" scope="step">
		<property name="inputResource" value="#{jobParameters['inputResource']}" />
		<property name="targetDirectory" value="#{jobParameters['targetDirectory']}" />
		<property name="targetFile" value="#{jobParameters['targetFile']}" />
	</bean>
	
	<bean id="reader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
		<property name="resource" value="file:#{jobParameters['targetDirectory']+jobParameters['targetFile']}" />
		<property name="linesToSkip" value="1" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names" value="ID,NAME,DESCRIPTION,PRICE" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean class="com.example.batch.ProductFieldSetMapper" />
				</property>
			</bean>
		</property>
	</bean>
	
	<bean id="processor" class="com.example.processor.Processor" />

	<bean id="writer" class="com.example.batch.ProductJdbcItemWriter">
		<property name="simpleJdbcTemplate" ref="simpleJdbcTemplate" />
		<property name="itemSqlParameterSourceProvider">
			<bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
		</property>
	</bean>
</beans>