<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/batch
http://www.springframework.org/schema/batch/spring-batch-2.1.xsd">

	<job id="importProducts" xmlns="http://www.springframework.org/schema/batch">
		<listeners>
			<listener ref="jobListener" />
		</listeners>
		
		<!-- <step id="decompress" next="readWrite">
			<tasklet ref="decompressTasklet"/>
		</step> -->
		
		<split id="readWrite" task-executor="taskExecutor">
			<flow>
				<step id="readWriteBookProduct">
					<tasklet>
						<chunk reader="bookProductItemReader" writer="writer" commit-interval="100" skip-limit="5">
							<skippable-exception-classes>
								<include class="org.springframework.batch.item.file.FlatFileParseException"/>
							</skippable-exception-classes>
						</chunk>
					</tasklet>
				</step>
			</flow>
			<flow>
				<step id="readWriteMobileProduct">
					<tasklet>
						<chunk reader="mobileProductItemReader" writer="writer" commit-interval="100" skip-limit="5">
							<skippable-exception-classes>
								<include class="org.springframework.batch.item.file.FlatFileParseException"/>
							</skippable-exception-classes>
						</chunk>
					</tasklet>
				</step>
			</flow>
		</split>
		
		<!-- <step id="moveProcessedFiles">
			<tasklet ref="moveProcessedFilesTasklet" />
		</step> -->
	</job>
	
	<bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="5" />
		<property name="maxPoolSize" value="5" />
	</bean>
	
	<bean id="jobListener" class="com.example.batch.listener.JobListener">
		<property name="simpleJdbcTemplate" ref="simpleJdbcTemplate" />
	</bean>
	
	<bean id="decompressTasklet" class="com.example.batch.DecompressTasklet" scope="step">
		<property name="inputResource" value="#{jobParameters['inputResource']}" />
		<property name="targetDirectory" value="#{jobParameters['targetDirectory']}" />
		<property name="targetFile" value="#{jobParameters['targetFile']}" />
	</bean>
	
	<bean id="bookProductItemReader" class="org.springframework.batch.item.file.FlatFileItemReader">
		<property name="resource" value="classpath:/input/book-products-delimited.txt" />
		<property name="linesToSkip" value="1" />
		<property name="lineMapper" ref="lineMapper" />
	</bean>
	
	<bean id="mobileProductItemReader" class="org.springframework.batch.item.file.FlatFileItemReader">
		<property name="resource" value="classpath:/input/mobile-products-delimited.txt" />
		<property name="linesToSkip" value="1" />
		<property name="lineMapper" ref="lineMapper" />
	</bean>
	
	<bean id="lineMapper" class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
		<property name="lineTokenizer" ref="lineTokenizer" />
		<property name="fieldSetMapper">
			<bean class="com.example.batch.ProductFieldSetMapper" />
		</property>
	</bean>
	
	<bean id="lineTokenizer" class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
		<property name="delimiter" value="," />
		<property name="names" value="ID,NAME,DESCRIPTION,SPECIFIC,PRICE" />
	</bean>
	
	<bean id="processor" class="com.example.processor.Processor" />

	<bean id="writer" class="com.example.batch.ProductJdbcItemWriter">
		<property name="simpleJdbcTemplate" ref="simpleJdbcTemplate" />
		<property name="itemSqlParameterSourceProvider">
			<bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
		</property>
	</bean>
</beans>