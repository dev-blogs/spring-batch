<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:int-stream="http://www.springframework.org/schema/integration/stream"
	xmlns:int-file="http://www.springframework.org/schema/integration/file"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/jdbc
			http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context-3.0.xsd
			http://www.springframework.org/schema/batch
			http://www.springframework.org/schema/batch/spring-batch-2.1.xsd
			http://www.springframework.org/schema/integration
			http://www.springframework.org/schema/integration/spring-integration-2.1.xsd
			http://www.springframework.org/schema/integration/stream
			http://www.springframework.org/schema/integration/stream/spring-integration-stream-2.0.xsd
			http://www.springframework.org/schema/integration/file
			http://www.springframework.org/schema/integration/file/spring-integration-file-2.0.xsd">

	<!-- dataSource -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.SingleConnectionDataSource">
		<property name="driverClassName" value="org.h2.Driver" />
		<!--<property name="url" value="jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1" />-->
		<property name="url" value="jdbc:h2:tcp://localhost/mem:testdb;DB_CLOSE_DELAY=-1" />
		<property name="username" value="sa" />
		<property name="password" value="" />
		<property name="suppressClose" value="true" />
	</bean>
		
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg ref="dataSource" />
	</bean>
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<constructor-arg ref="dataSource" />
	</bean>
	
	<!-- spring batch -->
	<batch:job id="importProducts" xmlns="http://www.springframework.org/schema/batch">
		<step id="mapImportToJobInstanceStep" next="readWriteProductStep">
			<tasklet ref="mapImportToJobInstanceTasklet" />
		</step>
		<step id="readWriteProductStep">
			<tasklet>
				<chunk reader="productReader" writer="productWriter" commit-interval="100" />
			</tasklet>
		</step>
	</batch:job>
	
	<bean id="mapImportToJobInstanceTasklet" class="com.example.batch.step.ImportToJobInstanceMappingTasklet" scope="step">
		<property name="productImoprtId" value="#{jobParameters['importId']" />
		<property name="productImportRepository" ref="jdbcProductImportRepository" />
	</bean>
	
	<bean id="productReader" class="org.springframework.batch.item.xml.StaxEventItemReader" scope="step">
		<property name="unmarshaller" ref="marshaller" />
		<property name="fragmentRootElementName" value="product" />
		<property name="resource" value="#{jobParameters['inputFile']}" />
	</bean>
	
	<bean id="productWriter" class="com.example.batch.writer.ProductJdbcItemWriter">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
	</bean>
	
	<bean id="marshaller" class="org.springframework.oxm.castor.CastorMarshaller">
		<property name="mappingLocation" value="classpath:/xml/castor-xml-mapping.xml" />
	</bean>
	
	<!-- spring integration -->
	<int:gateway id="productImportGateway" service-interface="com.example.integration.ProductImportGateway" default-request-channel="product-import-as-string" />
	
	<int:channel id="product-import-as-string" />
	<int:channel id="job-requests" />
	
	<int-file:outbound-channel-adapter 
		directory="file:/home/vostro/practice/temp222"
		auto-create-directory="true"
		channel="product-import-as-string"
		filename-generator="productImportFileNameGenerator" />
		
	<int-file:inbound-channel-adapter 
		directory="file:/home/vostro/practice/temp222"
		channel="product-imports"
		auto-create-directory="true"
		filename-pattern="*.xml">
		<int:poller fixed-rate="1000" />
	</int-file:inbound-channel-adapter>
	
	<int:service-activator 
		input-channel="product-imports"
		output-channel="job-requests">
		<bean class="com.example.integration.ProductImportToJobLauncherRequestHandler" />
	</int:service-activator>
	
	<int-stream:stdout-channel-adapter channel="job-requests" />
		
	<!-- spring bean scanning -->
	<context:annotation-config />
	<context:component-scan base-package="com.example.repository.jdbc" />
	
</beans>